/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Kimlong
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */

    private static final String dataConn="jdbc:mysql://localhost:3306/jdbcdemo";
    private static final String username="root";
    private static final String password="";
    
    Connection sqlConn = null;
    PreparedStatement pst= null;
    ResultSet rs=null;
    
    int q,i,id, deleteItem,searchFound,isHide=0,countStudent,countFemale;
    String sql="select * from student order by studentID";
    
//    =======================Update database======================================
    public void upDateDB(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            pst = sqlConn.prepareStatement(sql);

            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            q = stData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel) jTable.getModel();
            RecordTable.setRowCount(0);

            searchFound=0;
            countStudent=0;
            countFemale=0;
            while(rs.next()){
                Vector columnData = new Vector();
                for(i=1;i<=q;i++){
                    columnData.add(rs.getInt("studentID"));
                    columnData.add(rs.getString("name"));
                    columnData.add(rs.getString("gender"));
                    columnData.add(rs.getString("dob"));
                    columnData.add(rs.getString("room"));
                    columnData.add(rs.getString("time"));
                    columnData.add(rs.getString("course"));
                    columnData.add(rs.getDouble("price"));
                    searchFound++;
                }

                if(rs.getString("gender").compareTo("Female")==0)
                    countFemale++;
                RecordTable.addRow(columnData);
                countStudent++;
           }

            jtextTotal.setText("Total Students: " + countStudent+", Female: "+ countFemale);
       
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
}

    public void updateItem(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            String room="";
            String time="";
            String course="";

            pst = sqlConn.prepareStatement("select * from coursetb order by course");
            rs = pst.executeQuery();
            while (rs.next()){
                if (!rs.getString("course").isBlank()){
                    course += rs.getString("course") +";";
                }
            }

            pst = sqlConn.prepareStatement("select * from roomtb order by room");
            rs = pst.executeQuery();
            while (rs.next()){
                if (!rs.getString("room").isBlank()){
                    room += rs.getString("room") +";";
                }
            }

            pst = sqlConn.prepareStatement("select * from timetb order by time");
            rs = pst.executeQuery();
            while (rs.next()){
                if (!rs.getString("time").isBlank()){
                    time += rs.getString("time") +";";
                }
            }

            String[] rooms= room.split(";");
            String[] times= time.split(";");
            String[] courses= course.split(";");

            jtextRoom.setModel(new javax.swing.DefaultComboBoxModel<>(rooms));
            jtextTime.setModel(new javax.swing.DefaultComboBoxModel<>(times));
            jtextCourse.setModel(new javax.swing.DefaultComboBoxModel<>(courses));

        }catch (Exception ex){
//            JOptionPane.showMessageDialog(null,ex);
        }

    }
    
//    ======================= End Update database==================================
        
    public Main() {
        initComponents();
        updateItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtextId = new javax.swing.JTextField();
        jtextName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtextDob = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jtextCourse = new javax.swing.JComboBox<>();
        jtextPrice = new javax.swing.JTextField();
        jmessage = new javax.swing.JLabel();
        jtextGender = new javax.swing.JComboBox<>();
        jtextTime = new javax.swing.JComboBox<>();
        jtextRoom = new javax.swing.JComboBox<>();
        jbtnDisplay = new javax.swing.JButton();
        jtextTotal = new javax.swing.JLabel();
        btnSetting = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jbtnUpdate = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jtextSort = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jbtnNew = new javax.swing.JButton();
        jbtnLogout = new javax.swing.JButton();
        jbtnSearch = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jbtnReset = new javax.swing.JButton();
        jtextSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 4));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(51, 255, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("STUDENT REGISTRATION SYSTEM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel1)
                .addContainerGap(207, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1180, 70));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("ID:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jtextId.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel3.add(jtextId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 290, 40));

        jtextName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel3.add(jtextName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 290, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Name:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Gender:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jtextDob.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel3.add(jtextDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 290, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Date of birth:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Room:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, -1, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Time:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, -1, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Course:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, -1, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Price:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, -1, 30));

        jTable.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Gender", "Date of Birth", "Room", "Time", "Course", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 970, 200));

        jtextCourse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtextCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "............", "C/C++", "Java", "Python", "JavaScript", "PHP", "Kotlin" }));
        jtextCourse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(jtextCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, 290, 40));

        jtextPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtextPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextPriceActionPerformed(evt);
            }
        });
        jPanel3.add(jtextPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 160, 290, 40));

        jmessage.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jmessage.setForeground(new java.awt.Color(255, 0, 51));
        jPanel3.add(jmessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 750, -1));

        jtextGender.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtextGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "............", "Male", "Female" }));
        jtextGender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(jtextGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 290, 40));

        jtextTime.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtextTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "............", "1:30 - 4:00", "4:00 - 5:00", "5:00 - 6:00", "6:00 - 7:00", "7:00 - 8:00" }));
        jtextTime.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(jtextTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 60, 290, 40));

        jtextRoom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtextRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "............", "CS001", "CS002", "CS003", "CS004" }));
        jtextRoom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(jtextRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 290, 40));

        jbtnDisplay.setBackground(new java.awt.Color(0, 255, 153));
        jbtnDisplay.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jbtnDisplay.setForeground(new java.awt.Color(242, 242, 242));
        jbtnDisplay.setText("Display");
        jbtnDisplay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDisplayActionPerformed(evt);
            }
        });
        jPanel3.add(jbtnDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 220, 70, 30));

        jtextTotal.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jtextTotal.setForeground(new java.awt.Color(255, 0, 0));
        jtextTotal.setText("Total Student : #");
        jPanel3.add(jtextTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 560, 20));

        btnSetting.setBackground(new java.awt.Color(153, 153, 255));
        btnSetting.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSetting.setForeground(new java.awt.Color(242, 242, 242));
        btnSetting.setText("Setting");
        btnSetting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingActionPerformed(evt);
            }
        });
        jPanel3.add(btnSetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 470, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 990, 500));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnUpdate.setBackground(new java.awt.Color(0, 255, 153));
        jbtnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnUpdate.setForeground(new java.awt.Color(242, 242, 242));
        jbtnUpdate.setText("Update");
        jbtnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 170, 40));

        jbtnDelete.setBackground(new java.awt.Color(0, 255, 153));
        jbtnDelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnDelete.setForeground(new java.awt.Color(242, 242, 242));
        jbtnDelete.setText("Delete");
        jbtnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 170, 40));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Search:");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 70, -1));

        jtextSort.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtextSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "StudentID", "Name", "Gender", "Room", "Time", "Course", "Price" }));
        jtextSort.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jtextSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextSortActionPerformed(evt);
            }
        });
        jPanel4.add(jtextSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 170, 40));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Sort by:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 70, -1));

        jbtnNew.setBackground(new java.awt.Color(0, 255, 153));
        jbtnNew.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnNew.setForeground(new java.awt.Color(242, 242, 242));
        jbtnNew.setText("Add New");
        jbtnNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNewActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 40));

        jbtnLogout.setBackground(new java.awt.Color(255, 0, 51));
        jbtnLogout.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnLogout.setForeground(new java.awt.Color(242, 242, 242));
        jbtnLogout.setText("Logout");
        jbtnLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLogoutActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 450, -1, 40));

        jbtnSearch.setBackground(new java.awt.Color(255, 204, 0));
        jbtnSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnSearch.setForeground(new java.awt.Color(242, 242, 242));
        jbtnSearch.setText("Search");
        jbtnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 170, 40));

        jbtnExit.setBackground(new java.awt.Color(255, 0, 51));
        jbtnExit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnExit.setForeground(new java.awt.Color(242, 242, 242));
        jbtnExit.setText("Exit");
        jbtnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 70, 40));

        jbtnReset.setBackground(new java.awt.Color(255, 204, 0));
        jbtnReset.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnReset.setForeground(new java.awt.Color(242, 242, 242));
        jbtnReset.setText("Reset");
        jbtnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnResetActionPerformed(evt);
            }
        });
        jPanel4.add(jbtnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 170, 40));

        jtextSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel4.add(jtextSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 170, 40));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 90, 190, 500));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtextPriceActionPerformed(ActionEvent evt) {
    }
    /**
     * button display and hide table
     */
    private void jbtnDisplayActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        if(isHide==0){
            sql="select * from student order by studentID";
            upDateDB();
            jbtnDisplay.setText("Hide");
            jbtnDisplay.setBackground(new java.awt.Color(255, 0, 51));
            isHide=1;

            jtextSort.setSelectedIndex(0);
        }else {
            jbtnDisplay.setText("Display");
            jbtnDisplay.setBackground(new java.awt.Color(0, 255, 153));
            sql="select * from student where id<0";
            upDateDB();
            isHide=0;

            jtextTotal.setText("Total Students: #");
        }
        jmessage.setText("");

    }

    /**
     * sort button action
     */
    private void jtextSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextSortActionPerformed
        // TODO add your handling code here:
        String sortItem = (String) jtextSort.getSelectedItem();
        sql="select * from student order by "+ sortItem.toLowerCase();
        upDateDB();
    }//GEN-LAST:event_jtextSortActionPerformed

    /**
     * logout button action
     */
    private void jbtnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLogoutActionPerformed
        // TODO add your handling code here:
        deleteItem = JOptionPane.showConfirmDialog(null,"Are you sure to logout?","Warning",JOptionPane.YES_NO_OPTION);
        if(deleteItem == JOptionPane.YES_OPTION) {
            new Login().setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jbtnLogoutActionPerformed

    /**
     * delete button action
     */
    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        // TODO add your handling code here:

        DefaultTableModel RecordTable = (DefaultTableModel) jTable.getModel();
        int selectedRows = jTable.getSelectedRow();
        /**
         * to check : the row to delete is selected or not
         */
        if(selectedRows != -1){
            try {

                int id1 = Integer.parseInt(RecordTable.getValueAt(selectedRows,0).toString());
//                String id1 = RecordTable.getValueAt(selectedRows, 0).toString();
                deleteItem = JOptionPane.showConfirmDialog(null,"Are you sure to delete?","Warning",JOptionPane.YES_NO_OPTION);

                if(deleteItem == JOptionPane.YES_OPTION) {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    sqlConn = DriverManager.getConnection(dataConn, username, password);
                    pst = sqlConn.prepareStatement("delete from student where studentID=?");

                    pst.setInt(1,id1);
                    pst.executeUpdate();

                    jmessage.setForeground(new java.awt.Color(55, 204, 140));
                    jmessage.setText("Record deleted");

                    upDateDB();
                    jtextId.setText("");
                    jtextName.setText("");
                    jtextGender.setSelectedIndex(0);
                    jtextDob.setText("");
                    jtextRoom.setSelectedIndex(0);
                    jtextTime.setSelectedIndex(0);
                    jtextCourse.setSelectedIndex(0);
                    jtextPrice.setText("");
                    jtextSort.setSelectedIndex(0);
                }
            } catch (Exception ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else {
            jmessage.setForeground(new java.awt.Color(255, 0, 51));
            jmessage.setText("Please select a row to delete!!!");
            upDateDB();
        }


    }//GEN-LAST:event_jbtnDeleteActionPerformed
    /**
     * Add new or insert button action
     */
    private void jbtnNewActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jbtnNewActionPerformed
        // TODO add your handling code here:
        /**
         * to check : the required information is filled or not
         */
        if(!(jtextId.getText().isEmpty() || jtextName.getText().isEmpty() || jtextDob.getText().isEmpty() || jtextPrice.getText().isEmpty()
                || jtextGender.getSelectedIndex()==0 || jtextRoom.getSelectedIndex()==0 || jtextTime.getSelectedIndex()==0 || jtextCourse.getSelectedIndex()==0)) {
                try {
                    /**
                     * to check : the id and price are numbers or not
                     */
                    Double.parseDouble(jtextPrice.getText());
                    Integer.parseInt(jtextId.getText());
                    boolean IDexist=false;

                    try {
                        /**
                         * to check : database is connected successfully or not
                         */
                        try{
                            /**
                             * to check : the id is already used or not
                             */
                            Class.forName("com.mysql.cj.jdbc.Driver");
                            sqlConn = DriverManager.getConnection(dataConn,username,password);
                            pst = sqlConn.prepareStatement("select studentID from student");

                            rs = pst.executeQuery();

                            while(rs.next()){
                               if(Integer.parseInt(jtextId.getText()) == rs.getInt("studentID")) {
                                   IDexist=true;
                                   break;
                               }
                            }
                        }catch(Exception ex){
                            JOptionPane.showMessageDialog(null,ex);
                        }
                        /**
                         * if the id is not used yet... process the inserting
                         */
                        if(!IDexist) {
                            /**
                             * to confirm the inserting
                             */
                            int AddItem = JOptionPane.showConfirmDialog(null, "Are you sure to add?", "Confirm", JOptionPane.YES_NO_OPTION);
                            if (AddItem == JOptionPane.YES_OPTION) {
                                Class.forName("com.mysql.cj.jdbc.Driver");
                                sqlConn = DriverManager.getConnection(dataConn, username, password);
                                pst = sqlConn.prepareStatement("insert into student(studentID,name,gender,dob,room,time,course,price) value(?,?,?,?,?,?,?,?)");

                                pst.setInt(1, Integer.parseInt(jtextId.getText()));
                                pst.setString(2, jtextName.getText());
                                pst.setString(3, (String) jtextGender.getSelectedItem());
                                pst.setString(4, jtextDob.getText());
                                pst.setString(5, (String) jtextRoom.getSelectedItem());
                                pst.setString(6, (String) jtextTime.getSelectedItem());
                                pst.setString(7, (String) jtextCourse.getSelectedItem());
                                pst.setDouble(8, Double.parseDouble(jtextPrice.getText()));

                                pst.executeUpdate();

                                sql = "select * from student order by studentID";
                                upDateDB();

                                jmessage.setForeground(new java.awt.Color(55, 204, 140));
                                jmessage.setText("Record added");
                                jtextSort.setSelectedIndex(0);

                            }
                        }else {
                            JOptionPane.showMessageDialog(this, "This id is already used!!!");
                            jmessage.setText("");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }catch (Exception ex){
                    JOptionPane.showMessageDialog(this, "ID and Price must be numberic !!!");
                }

        }else {
            jmessage.setForeground(new java.awt.Color(255, 0, 51));
            jmessage.setText("Please Input all the information to insert!!!");
            upDateDB();
        }
    }//GEN-LAST:event_jbtnNewActionPerformed

    /**
     * update button action
     */
    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) jTable.getModel();
        int selectedRows = jTable.getSelectedRow();
        /**
         * to check : the row is selected or not
         */
        if(selectedRows != -1){
            /**
             * to check : the required information is filled or not
             */
            if(!(jtextId.getText().isEmpty() || jtextName.getText().isEmpty() || jtextDob.getText().isEmpty() || jtextPrice.getText().isEmpty()
                    || jtextGender.getSelectedIndex()==0 || jtextRoom.getSelectedIndex()==0 || jtextTime.getSelectedIndex()==0 || jtextCourse.getSelectedIndex()==0)) {
                try {
                    /**
                     * to check : the id and price are numbers ot not
                     */
                    Double.parseDouble(jtextPrice.getText());
                    Integer.parseInt(jtextId.getText());
                    boolean IDexist=false;
                    try {
                        /**
                         * to check : database is connected successfully or not
                         */
                        try{
                            /**
                             * to check : the id is already used or not.
                             */
                            Class.forName("com.mysql.cj.jdbc.Driver");
                            sqlConn = DriverManager.getConnection(dataConn,username,password);

                            pst = sqlConn.prepareStatement("select studentID from student");
                            rs = pst.executeQuery();

                            while(rs.next()){
                                if(Integer.parseInt(jtextId.getText()) == rs.getInt("studentID")) {
                                    IDexist=true;
                                    break;
                                }
                            }

                            int selectedID = Integer.parseInt(RecordTable.getValueAt(selectedRows,0).toString());
                            if(Integer.parseInt(jtextId.getText()) == selectedID){
                                IDexist=false;
                            }

                        }catch(Exception ex){
                            JOptionPane.showMessageDialog(null,ex);
                        }
                        /**
                         * if the id is not used yet.... process updating
                         */
                        if(!IDexist) {
                            /**
                             * to check : information of student is changed or not
                             */
                            if(!(Integer.parseInt(RecordTable.getValueAt(selectedRows,0).toString()) == Integer.parseInt(jtextId.getText()) &&
                                    RecordTable.getValueAt(selectedRows,1).toString().compareTo(jtextName.getText())==0 &&
                                    RecordTable.getValueAt(selectedRows,2).toString().compareTo(jtextGender.getSelectedItem().toString())==0 &&
                                    RecordTable.getValueAt(selectedRows,3).toString().compareTo(jtextDob.getText())==0 &&
                                    RecordTable.getValueAt(selectedRows,4).toString().compareTo(jtextRoom.getSelectedItem().toString())==0 &&
                                    RecordTable.getValueAt(selectedRows,5).toString().compareTo(jtextTime.getSelectedItem().toString())==0 &&
                                    RecordTable.getValueAt(selectedRows,6).toString().compareTo(jtextCourse.getSelectedItem().toString())==0 &&
                                    Double.parseDouble(RecordTable.getValueAt(selectedRows,7).toString()) == Double.parseDouble(jtextPrice.getText()))
                            ) {
                                /**
                                 * to confirm the updating.
                                 */
                                int updateItem = JOptionPane.showConfirmDialog(null, "Are you sure to update?", "Confirm", JOptionPane.YES_NO_OPTION);

                                if (updateItem == JOptionPane.YES_OPTION) {

                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    sqlConn = DriverManager.getConnection(dataConn, username, password);

                                    int id1 = Integer.parseInt(RecordTable.getValueAt(selectedRows, 0).toString());
                                    pst = sqlConn.prepareStatement("update student set studentID=?,  name=?, gender=?, dob=?, room=?, time=?, course=?, price=? where studentID=?");

                                    pst.setInt(1, Integer.parseInt(jtextId.getText()));
                                    pst.setString(2, jtextName.getText());
                                    pst.setString(3, (String) jtextGender.getSelectedItem());
                                    pst.setString(4, jtextDob.getText());
                                    pst.setString(5, (String) jtextRoom.getSelectedItem());
                                    pst.setString(6, (String) jtextTime.getSelectedItem());
                                    pst.setString(7, (String) jtextCourse.getSelectedItem());
                                    pst.setDouble(8, Double.parseDouble(jtextPrice.getText()));

                                    pst.setInt(9, id1);

                                    pst.executeUpdate();

                                    sql = "select * from student order by studentID";
                                    upDateDB();
                                    jmessage.setForeground(new java.awt.Color(55, 204, 140));
                                    jmessage.setText("Record Updated");
                                    jtextSort.setSelectedIndex(0);
                                }
                            }else {
                                JOptionPane.showMessageDialog(this, "You haven't changed anything!!!");
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "This id is already used!!!");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }catch (Exception ex){
                    JOptionPane.showMessageDialog(this, "ID and Price must be numberic !!!");
                }

            }else {
                jmessage.setForeground(new java.awt.Color(255, 0, 51));
                jmessage.setText("Please input all the information to update!!!");
            }
        }else {
            jmessage.setForeground(new java.awt.Color(255, 0, 51));
            jmessage.setText("Please select a row to update!!!");
            upDateDB();
        }

    }//GEN-LAST:event_jbtnUpdateActionPerformed

    /**
     * mouse click on row of table
     */
    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
            DefaultTableModel RecordTable = (DefaultTableModel) jTable.getModel();

            int selectedRows = jTable.getSelectedRow();

            jtextId.setText(RecordTable.getValueAt(selectedRows, 0).toString());

            jtextName.setText(RecordTable.getValueAt(selectedRows, 1).toString());

            jtextGender.setSelectedItem(RecordTable.getValueAt(selectedRows,2).toString());

            jtextDob.setText(RecordTable.getValueAt(selectedRows, 3).toString());

            jtextRoom.setSelectedItem(RecordTable.getValueAt(selectedRows, 4).toString());

            jtextTime.setSelectedItem(RecordTable.getValueAt(selectedRows, 5).toString());

            jtextCourse.setSelectedItem(RecordTable.getValueAt(selectedRows, 6).toString());

            jtextPrice.setText(RecordTable.getValueAt(selectedRows, 7).toString());

    }//GEN-LAST:event_jTableMouseClicked
    /**
     * exit button action
     */
    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame,"Are you sure to exit?","Exit",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void btnSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingActionPerformed
        // TODO add your handling code here:
        new LoginAsAdmin().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnSettingActionPerformed

    /**
     * reset button action
     */
    private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        jtextId.setText("");
        jtextName.setText("");
        jtextGender.setSelectedIndex(0);
        jtextDob.setText("");
        jtextRoom.setSelectedIndex(0);
        jtextTime.setSelectedIndex(0);
        jtextCourse.setSelectedIndex(0);
        jtextPrice.setText("");
        jmessage.setText("");
        jtextSearch.setText("");
        jtextSort.setSelectedIndex(0);

        jbtnDisplay.setText("Hide");
        jbtnDisplay.setBackground(new java.awt.Color(255, 0, 51));
        isHide=1;

        sql="select * from student order by studentID";
        upDateDB();

    }

    /**
     * search button action
     */
    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        String searchItem = jtextSearch.getText();
        /**
         * to check : the search information(id or student's name) is filled or not.
         */
        if(searchItem.isEmpty()){
            JOptionPane.showMessageDialog(this, "Input ID or Student's name to search");
            sql="select * from student order by studentID";
            upDateDB();
            jmessage.setText("");
        }else{

            try {
                /**
                 * if input value is number...
                 */
                int sID  = Integer.parseInt(searchItem);
                sql="select * from student where studentID =" + sID +" order by studentID";
                upDateDB();
            }catch (Exception e){
                /**
                 * else , the input value is text...
                 */
                sql="SELECT * FROM student WHERE name LIKE '%" + searchItem +"%' ORDER BY studentID";
                upDateDB();
            }
        }

        /**
         * to display search found or not found message
         */
        if(searchFound==0 && !searchItem.isEmpty()){
            jmessage.setForeground(new java.awt.Color(255, 0, 51));
            jmessage.setText("SEARCH NOT FOUND!!!");
        }else {
            jmessage.setForeground(new java.awt.Color(55, 204, 140));
            jmessage.setText("SEARCH FOUND!!!");
        }
        jtextSearch.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSetting;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnDisplay;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnLogout;
    private javax.swing.JButton jbtnNew;
    private javax.swing.JButton jbtnReset;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JLabel jmessage;
    private javax.swing.JComboBox<String> jtextCourse;
    private javax.swing.JTextField jtextDob;
    private javax.swing.JComboBox<String> jtextGender;
    private javax.swing.JTextField jtextId;
    private javax.swing.JTextField jtextName;
    private javax.swing.JTextField jtextPrice;
    private javax.swing.JComboBox<String> jtextRoom;
    private javax.swing.JTextField jtextSearch;
    private javax.swing.JComboBox<String> jtextSort;
    private javax.swing.JComboBox<String> jtextTime;
    private javax.swing.JLabel jtextTotal;
    // End of variables declaration//GEN-END:variables
}
